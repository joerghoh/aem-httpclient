<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 |  Copyright 2015 Adobe Systems Incorporated
 |
 |  Licensed under the Apache License, Version 2.0 (the "License");
 |  you may not use this file except in compliance with the License.
 |  You may obtain a copy of the License at
 |
 |      http://www.apache.org/licenses/LICENSE-2.0
 |
 |  Unless required by applicable law or agreed to in writing, software
 |  distributed under the License is distributed on an "AS IS" BASIS,
 |  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 |  See the License for the specific language governing permissions and
 |  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>de.joerghoh</groupId>
	<artifactId>aem-httpclient</artifactId>
	<version>0.1-SNAPSHOT</version>
	<name>a sophisticated httpclient for AEM</name>
	<description>aem-httpclient</description>

	<properties>
		<aem.host>localhost</aem.host>
		<aem.port>4502</aem.port>
		<aem.publish.host>localhost</aem.publish.host>
		<aem.publish.port>4503</aem.publish.port>
		<sling.user>admin</sling.user>
		<sling.password>admin</sling.password>
		<vault.user>admin</vault.user>
		<vault.password>admin</vault.password>
		<bnd.version>5.1.2</bnd.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<aem.sdk.api>2023.5.11983.20230511T173830Z-230200</aem.sdk.api>
		<aemanalyser.version>1.4.10</aemanalyser.version>
		<componentGroupName>aem-httpclient</componentGroupName>

	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.sling</groupId>
				<artifactId>sling-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>bnd-maven-plugin</artifactId>
				<version>${bnd.version}</version>
				<executions>
					<execution>
						<id>bnd-process</id>
						<goals>
							<goal>bnd-process</goal>
						</goals>
						<configuration>
							<bnd>
								<![CDATA[
Import-Package: javax.annotation;version=0.0.0,*
Bundle-Category: ${componentGroupName}

# export all versioned packages except for conditional ones (https://github.com/bndtools/bnd/issues/3721#issuecomment-579026778)
-exportcontents: ${removeall;${packages;VERSIONED};${packages;CONDITIONAL}}

# reproducible builds (https://github.com/bndtools/bnd/issues/3521)
-noextraheaders: true
-snapshot: SNAPSHOT
                                ]]>
							</bnd>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>bnd-baseline-maven-plugin</artifactId>
				<version>${bnd.version}</version>
				<configuration>
					<failOnMissing>false</failOnMissing>
				</configuration>
				<executions>
					<execution>
						<id>baseline</id>
						<goals>
							<goal>baseline</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.1</version>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<scmCommentPrefix>[maven-scm] :</scmCommentPrefix>
					<preparationGoals>clean install</preparationGoals>
					<goals>install</goals>
					<releaseProfiles>release</releaseProfiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<inherited>true</inherited>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[3.3.9,)</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<message>Maven must be executed with a Java 11 JRE or higher.</message>
									<version>11</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
					<configuration>
						<tarLongFileMode>posix</tarLongFileMode>
					</configuration>
				</plugin>


				<!-- Maven Jar Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>

				<!-- Maven Clean Plugin -->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>


				<!-- Maven Resources Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>

				<!-- Maven Installer Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>

				<!-- Maven Failsafe Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>

				<!-- Maven Deploy Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>

				<!-- Apache Sling Plugin -->
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>sling-maven-plugin</artifactId>
					<version>2.4.0</version>
					<configuration>
						<slingUrl>http://${aem.host}:${aem.port}/system/console</slingUrl>
						<deploymentMethod>WebConsole</deploymentMethod>
					</configuration>
				</plugin>


				<!-- AEM Analyser Plugin -->
				<plugin>
					<groupId>com.adobe.aem</groupId>
					<artifactId>aemanalyser-maven-plugin</artifactId>
					<version>${aemanalyser.version}</version>
					<extensions>true</extensions>
				</plugin>

				<!-- Maven Dependency Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>

				<!-- Build Helper Maven Plugin -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse
                    m2e settings only. It has no influence on the Maven build itself. -->

				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
                                            org.apache.maven.plugins
                                        </groupId>
										<artifactId>
                                            maven-dependency-plugin
                                        </artifactId>
										<versionRange>
                                            [2.2,)
                                        </versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
                                            org.codehaus.mojo
                                        </groupId>
										<artifactId>
                                            build-helper-maven-plugin
                                        </artifactId>
										<versionRange>
                                            [1.5,)
                                        </versionRange>
										<goals>
											<goal>
                                                reserve-network-port
                                            </goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>

		<!-- Development profile: install only the bundle -->
		<profile>
			<id>autoInstallBundle</id>
			<!--
                To enable this feature for a bundle, the sling-maven-plugin
                (without configuration) needs to be included:

                <plugin>
                    <groupId>org.apache.sling</groupId>
                    <artifactId>sling-maven-plugin</artifactId>
                 </plugin>
            -->
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.sling</groupId>
							<artifactId>sling-maven-plugin</artifactId>
							<executions>
								<execution>
									<id>install-bundle</id>
									<goals>
										<goal>install</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>

	<!-- ====================================================================== -->

	<!-- D E P E N D E N C I E S -->

	<!-- ====================================================================== -->

	<dependencies>
	
		<dependency>
			<groupId>org.apache.httpcomponents.client5</groupId>
			<artifactId>httpclient5</artifactId>
			<version>5.2.1</version>
		</dependency>
	
		<dependency>
			<groupId>com.adobe.aem</groupId>
			<artifactId>aem-sdk-api</artifactId>
			<version>${aem.sdk.api}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.junit</groupId>
			<artifactId>junit-bom</artifactId>
			<version>5.8.2</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		
		<dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
            <version>5.8.2</version>
        </dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.1.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>4.1.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit-addons</groupId>
			<artifactId>junit-addons</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.wcm</groupId>
			<artifactId>io.wcm.testing.aem-mock.junit5</artifactId>
			<version>5.1.2</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.sling</groupId>
					<artifactId>org.apache.sling.scripting.api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.testing.caconfig-mock-plugin</artifactId>
			<version>1.4.0</version>
			<exclusions>
				<exclusion>
					<groupId>commons-collections</groupId>
					<artifactId>commons-collections</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>uk.org.lidalia</groupId>
			<artifactId>slf4j-test</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>

		<!-- wiremock -->
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock-jre8-standalone</artifactId>
			<version>2.35.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.24.2</version>
			<scope>test</scope>
		</dependency>
		

	</dependencies>

</project>
